{
  "_args": [
    [
      {
        "raw": "selectn@^1.0.20",
        "scope": null,
        "escapedName": "selectn",
        "name": "selectn",
        "rawSpec": "^1.0.20",
        "spec": ">=1.0.20 <2.0.0",
        "type": "range"
      },
      "/home/dianbagus/NODE/siTDP/node_modules/strong-soap"
    ]
  ],
  "_from": "selectn@>=1.0.20 <2.0.0",
  "_id": "selectn@1.1.2",
  "_inCache": true,
  "_location": "/strong-soap/selectn",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/selectn-1.1.2.tgz_1482779830829_0.2696519976016134"
  },
  "_npmUser": {
    "name": "wilmoore",
    "email": "wil.moore@wilmoore.com"
  },
  "_npmVersion": "3.10.5",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "raw": "selectn@^1.0.20",
    "scope": null,
    "escapedName": "selectn",
    "name": "selectn",
    "rawSpec": "^1.0.20",
    "spec": ">=1.0.20 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/strong-soap"
  ],
  "_resolved": "https://registry.npmjs.org/selectn/-/selectn-1.1.2.tgz",
  "_shasum": "fc8acd91df3f45acb01891c6773ae529851d6b17",
  "_shrinkwrap": null,
  "_spec": "selectn@^1.0.20",
  "_where": "/home/dianbagus/NODE/siTDP/node_modules/strong-soap",
  "author": {
    "name": "Wil Moore III",
    "email": "wil.moore@wilmoore.com"
  },
  "bugs": {
    "url": "https://github.com/wilmoore/selectn.js/issues"
  },
  "dependencies": {
    "brackets2dots": "^1.1.0",
    "curry2": "^1.0.0",
    "debug": "^2.5.2",
    "dotsplit.js": "^1.0.3"
  },
  "description": "Curried property accessor function that resolves deeply-nested object properties via dot/bracket-notation string path while mitigating TypeErrors via friendly and composable API.",
  "devDependencies": {
    "browserify-standalone": "^0.3.0",
    "dependency-check": "^2.6.1",
    "fixpack": "^2.2.0",
    "istanbul": "^0.4.2",
    "nodemon": "^1.11.0",
    "standard": "^8.0.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.3",
    "tape-catch": "^1.0.4",
    "uglify-js": "^2.7.3",
    "zuul": "^3.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "fc8acd91df3f45acb01891c6773ae529851d6b17",
    "tarball": "https://registry.npmjs.org/selectn/-/selectn-1.1.2.tgz"
  },
  "gitHead": "b0d099863af22e9d2ba7fd69adff6068e8f08d7f",
  "homepage": "https://github.com/wilmoore/selectn.js",
  "keywords": [
    "Mitigate TypeError",
    "TypeError",
    "TypeErrors",
    "access",
    "accessor",
    "bracket-notation string path",
    "browser",
    "callback",
    "composable",
    "compatible",
    "curried",
    "curry",
    "deep",
    "dot-notation string path",
    "dot/bracket-notation",
    "dot/bracket-notation string path",
    "dref",
    "es3",
    "es3 compatible",
    "functional",
    "functor",
    "higher-order",
    "nested",
    "object",
    "parameter order",
    "path-lookup",
    "pathval",
    "pointfree",
    "predicate",
    "property",
    "property access",
    "property accessor",
    "reach",
    "string path",
    "to-function"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "wilmoore",
      "email": "wil.moore@wilmoore.com"
    }
  ],
  "name": "selectn",
  "optionalDependencies": {},
  "readme": "# selectn\n> Curried [property accessor][Property accessors] function that resolves deeply-nested object properties via dot/bracket-notation string path while mitigating `TypeErrors` via friendly and composable API.\n\n[![Build Status](http://img.shields.io/travis/wilmoore/selectn.js.svg)](https://travis-ci.org/wilmoore/selectn.js) [![Sauce Test Status](https://saucelabs.com/buildstatus/wilmoore-selectn)](https://saucelabs.com/u/wilmoore-selectn) [![Code Climate](https://codeclimate.com/github/wilmoore/selectn.js/badges/gpa.svg)](https://codeclimate.com/github/wilmoore/selectn.js) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n```shell\nnpm install selectn --save\n```\n\nor\n\n```html\n<script src=\"https://unpkg.com/selectn/selectn.min.js\"></script>\n```\n\n> You may also install `selectn` via [Bower], [Duo], or [jspm].\n\n###### npm stats\n\n[![npm](https://img.shields.io/npm/v/selectn.svg)](https://www.npmjs.org/package/selectn) [![NPM downloads](http://img.shields.io/npm/dm/selectn.svg)](https://www.npmjs.org/package/selectn) [![David](https://img.shields.io/david/wilmoore/selectn.js.svg)](https://david-dm.org/wilmoore/selectn.js)\n\n###### browser support\n> The following browsers are continuously tested; however, `selectn` is also supported and known to work on even older browsers not listed below:\n\n[![Sauce Test Status](https://badges.herokuapp.com/sauce/wilmoore-selectn)](https://saucelabs.com/u/wilmoore-selectn)\n\n## Overview\n\n###### allows you to refactor this:\n\n    person && person.info && person.info.name && person.info.name.full\n\n###### into:\n\n    selectn('info.name.full', person)\n\n###### or refactor this:\n\n    contacts.map(function (contact) {\n      return contact && contact.addresses && contact.addresses[0]\n    })\n\n###### into:\n\n    contacts.map(selectn('addresses[0]')))\n\n## Demo\n\n[![npm](https://cloudup.com/c1SCaPFONFn+)](https://www.npmjs.org/package/selectn)\n\n## Features\n\n  - Mitigates boilerplate guards like `if (obj && obj.a && obj.a.b && obj.a.b.c) { return obj.a.b.c; }`.\n  - Mitigates **TypeError** `Cannot read property '...' of undefined`.\n  - Supports multiple levels of array nesting (i.e. `group[0].section.a.seat[3]`).\n  - Supports dashed key access (i.e. `stats.temperature-today`).\n  - If value at path is a function, the value returned is the return value of invoking the function.\n  - [Partial application is automatic][Un-bind your JS with curry] when you omit the second argument (i.e. `selectn` is curried).\n  - Property accessor generated by `selectn` can be passed to higher-order functions like [map] or [filter].\n  - Compatible with [modern and legacy browsers][browsers], Node/CommonJS, and AMD.\n  - Haskell style [parameter order] allows for [pointfree style programming][Un-bind your JS with curry].\n\n## Non-Features\n\n  - No [eval][] or [Function][] (see: [`eval`][note] in disguise).\n  - No [typeof][] since, [typeof][] is not a real solution to this problem but can _appear_ to be due to the way the global scope is _implied_.\n\n## Usage example(s)\n\n#### property accessor as predicate\n> Avoid annoying __Cannot read property '...' of undefined__ `TypeError` without writing boilerplate anonymous functions or guards.\n\n```js\nvar selectn = require('selectn')\nvar language = [\n  { strings: { en: { name: 'english' } }},\n  { strings: { es: { name: 'spanish' } }},\n  { strings: { km: { name: 'khmer'   } }},\n  { strings: { es: { name: 'spanish' } }},\n  { nodatas: {}}\n]\n\nvar spanish = selectn('strings.es')\n//=> [Function]\n\nlanguage.filter(spanish).length\n//=> 2\n```\n\n#### point-free property accessor\n> Access deeply nested properties (including dashed properties) using point-free style.\n\n```js\nvar selectn = require('selectn')\nvar data = {\n  client: {\n    message: { 'message-id': 'd50afb80-a6be-11e2-9e96-0800200c9a66' }\n  }\n}\n\nvar getId = selectn('client.message.message-id')\n//=> [Function]\n\nPromise.resolve(data).then(getId)\n//=> 'd50afb80-a6be-11e2-9e96-0800200c9a66'\n```\n\n#### property accessor for functor\n> Avoid wrapping property accessors in anonymous functions.\n\n```js\nvar selectn = require('selectn')\nvar contacts = [\n  { addresses: [ '123 Main St, Broomfield, CO 80020', '123 Main St, Denver, CO 80202' ] },\n  { addresses: [ '123 Main St, Kirkland, IL 60146' ] },\n  { phones: [] },\n]\n\nvar primaryAddress = selectn('addresses[0]')\n//=> [Function]\n\ncontacts.map(primaryAddress)\n//=> [ '123 Main St, Broomfield, CO 80020', '123 Main St, Kirkland, IL 60146', undefined ]\n```\n\n#### support for keys containing `.`\n> Pass an array as path instead of a string.\n\n```js\nvar selectn = require('selectn')\nvar data = {\n  client: {\n    'message.id': 'd50afb80-a6be-11e2-9e96-0800200c9a66'\n  }\n}\n\nselectn(['client', 'message.id'], data)\n//=> 'd50afb80-a6be-11e2-9e96-0800200c9a66'\n```\n\n#### value at path is a function\n> Avoid `var fn = data.may.be.a.fn; if (typeof fn === 'function') fn()`.\n\n```js\nvar selectn = require('selectn')\nfunction hi () { return 'hi' }\nvar data = { may: { be: { a: { fn: hi } } } }\n\nselectn('may.be.a.fn', data)\n//=> 'hi'\n```\n\n## API (partial application)\n\n### `selectn(String|Array)`\n\n###### arguments\n\n * `path (String|Array)` Dot/bracket-notation string path or array.\n\n###### returns\n\n - `(Function)` Unary function accepting the object to access.\n\n## API (full application)\n\n### `selectn(String|Array, Object)`\n\n###### arguments\n\n * `path (String|Array)` Dot/bracket-notation string path or array.\n * `object (String|Array)` Object to access.\n\n###### returns\n\n - `(*|undefined)` Value at path if path exists or `undefined` if path does not exist.\n\n## Other Languages\n\n`selectn` has inspired ports to other languages:\n\n|Language|Project|\n|---|---|\n|Python|[selectn](https://pypi.python.org/pypi/selectn)|\n\n## Related\n\nOther JS packages whose friendly API is driven by `selectn`:\n\n- [array-groupby]\n- [array.filter]\n- [arraymap]\n- [orderby-time]\n- [regexp-id]\n- [sum.js]\n\n## Inspiration\n\nJS packages that have inpsired `selectn`:\n\n- [reach]\n- [to-function]\n\n## Alternatives\n\nAlternative packages you might like instead of `selectn`:\n\n- [_.get]\n- [dref]\n- [path-lookup]\n- [pathval]\n- [reach]\n- [to-function]\n\n## Licenses\n\n[![LICENSE](http://img.shields.io/npm/l/selectn.svg)](license)\n\n\n[_.get]: https://www.npmjs.com/package/lodash.get\n[Bower]: http://bower.io\n[Duo]: http://duojs.org\n[Function]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function\n[Property accessors]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors\n[Sauce Test Status]: https://saucelabs.com/browser-matrix/selectn.svg\n[Un-bind your JS with curry]: https://medium.com/@wilmoore/un-bind-your-js-with-curry-a8657a4138cb#.6dswguc2q\n[array-groupby]: https://www.npmjs.com/package/array-groupby\n[array.filter]: https://www.npmjs.com/package/array.filter\n[arraymap]: https://www.npmjs.com/package/arraymap\n[browsers]: https://saucelabs.com/u/selectn\n[dref]: https://github.com/crcn/dref.js\n[eval]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/eval\n[filter]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n[jspm]: http://jspm.io\n[map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n[note]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Member_Operators#Note_on_eval\n[orderby-time]: https://www.npmjs.com/package/orderby-time\n[parameter order]: https://wiki.haskell.org/Parameter_order\n[path-lookup]: https://github.com/yields/path-lookup\n[pathval]: https://www.npmjs.com/package/pathval\n[reach]: https://github.com/spumko/hoek#reachobj-chain\n[regexp-id]: https://www.npmjs.com/package/regexp-id\n[sum.js]: https://www.npmjs.com/package/sum.js\n[to-function]: https://github.com/component/to-function\n[typeof]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wilmoore/selectn.js.git"
  },
  "reveal": true,
  "scripts": {
    "build": "browserify-standalone && uglifyjs $npm_package_name.js > $npm_package_name.min.js",
    "clean": "rimraf $npm_package_name.js $npm_package_name.min.js",
    "cover": "istanbul cover test.js",
    "dependency-check": "dependency-check ./package.json && dependency-check ./package.json --unused --no-dev",
    "dev": "nodemon -x 'npm run test --silent' -e 'js json'",
    "fixpack": "fixpack",
    "postversion": "git push --follow-tags && npm publish",
    "prepublish": "npm run build",
    "pretest:browsers": "npm test",
    "standard": "standard",
    "test": "npm run dependency-check && npm run standard --silent && node test.js | tap-spec",
    "test:browsers": "zuul -- test.js",
    "test:browsers:local": "zuul --local 8080 -- test.js"
  },
  "version": "1.1.2"
}
